package com.everis.hello.shoplist.app.ports.output;

import com.everis.hello.shoplist.app.domain.ShopList;
import com.everis.hello.shoplist.app.exception.ShopListAlreadyExistsException;
import com.everis.hello.shoplist.app.exception.ShopListNotFoundException;

import javax.validation.constraints.NotNull;

public interface ShopListRepository {
    /**
     * Checks if the repository contains at least one list with a given list name for a given user.
     *
     * @param username Owner of the list.
     * @param listName Name of the list.
     *
     * @return Whether the list exists for that user or not.
     */
    boolean existsList(@NotNull String username, @NotNull String listName);

    /**
     * Retrieves the list with a given list name for a given user. If the list does not exist, it produces a
     * {@link ShopListNotFoundException}.
     *
     * @param username Owner of the list.
     * @param listName Name of the list.
     *
     * @return Whether the list exists for that user or not.
     * @throws ShopListNotFoundException When the list does not exist.
     */
    ShopList getShopList(@NotNull String username, @NotNull String listName) throws ShopListNotFoundException;

    /**
     * Persist a new list into the repository. If the list violates its uniqueness constraint, it produces a
     * {@link ShopListAlreadyExistsException}.
     *
     * @param shopList Shop list to persist.
     *
     * @return A new and potentially modified instance of the original object that may contain persistence-generated
     *         fields (like insertion dates or autogenerated sequence numbers).
     * @throws ShopListAlreadyExistsException When the list already exists.
     */
    ShopList create(@NotNull ShopList shopList) throws ShopListAlreadyExistsException;

    /**
     * Checks how many lists does a given user own in this repository.
     *
     * @param username Owner of the lists.
     *
     * @return The number of lists this user owns.
     */
    int userListQuantity(@NotNull String username);
}
